{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\param\\\\Downloads\\\\folder\\\\college-portal\\\\Frontend\\\\src\\\\components\\\\PrivateRouteAdmin.jsx\",\n  _s = $RefreshSig$();\nimport { Navigate } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PrivateRouteAdmin = ({\n  children\n}) => {\n  _s();\n  const [loading, setLoading] = useState(true);\n  const [authorized, setAuthorized] = useState(false);\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    const user = JSON.parse(localStorage.getItem(\"user\"));\n    if (token && (user === null || user === void 0 ? void 0 : user.role) === \"admin\") {\n      setAuthorized(true);\n    }\n    setLoading(false);\n  }, []);\n  if (loading) return null; // or loader spinner\n\n  return authorized ? children : /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/auth\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 34\n  }, this);\n};\n_s(PrivateRouteAdmin, \"gikolyhxMALaF5kh7V57C2MeGx8=\");\n_c = PrivateRouteAdmin;\nexport default PrivateRouteAdmin;\nvar _c;\n$RefreshReg$(_c, \"PrivateRouteAdmin\");","map":{"version":3,"names":["Navigate","useEffect","useState","jsxDEV","_jsxDEV","PrivateRouteAdmin","children","_s","loading","setLoading","authorized","setAuthorized","token","localStorage","getItem","user","JSON","parse","role","to","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/param/Downloads/folder/college-portal/Frontend/src/components/PrivateRouteAdmin.jsx"],"sourcesContent":["import { Navigate } from \"react-router-dom\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst PrivateRouteAdmin = ({ children }) => {\r\n  const [loading, setLoading] = useState(true);\r\n  const [authorized, setAuthorized] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem(\"token\");\r\n    const user = JSON.parse(localStorage.getItem(\"user\"));\r\n\r\n    if (token && user?.role === \"admin\") {\r\n      setAuthorized(true);\r\n    }\r\n\r\n    setLoading(false);\r\n  }, []);\r\n\r\n  if (loading) return null; // or loader spinner\r\n\r\n  return authorized ? children : <Navigate to=\"/auth\" />;\r\n};\r\n\r\nexport default PrivateRouteAdmin;\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,kBAAkB;AAC3C,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,iBAAiB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC1C,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACQ,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAEnDD,SAAS,CAAC,MAAM;IACd,MAAMW,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,MAAMC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACJ,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC;IAErD,IAAIF,KAAK,IAAI,CAAAG,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEG,IAAI,MAAK,OAAO,EAAE;MACnCP,aAAa,CAAC,IAAI,CAAC;IACrB;IAEAF,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,IAAID,OAAO,EAAE,OAAO,IAAI,CAAC,CAAC;;EAE1B,OAAOE,UAAU,GAAGJ,QAAQ,gBAAGF,OAAA,CAACJ,QAAQ;IAACmB,EAAE,EAAC;EAAO;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACxD,CAAC;AAAChB,EAAA,CAlBIF,iBAAiB;AAAAmB,EAAA,GAAjBnB,iBAAiB;AAoBvB,eAAeA,iBAAiB;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}