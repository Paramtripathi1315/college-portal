{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\param\\\\Downloads\\\\folder\\\\college-portal\\\\Frontend\\\\src\\\\pages\\\\Signup.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Signup() {\n  _s();\n  const [form, setForm] = useState({\n    name: '',\n    email: '',\n    password: ''\n  });\n  const navigate = useNavigate();\n  const handleChange = e => setForm({\n    ...form,\n    [e.target.name]: e.target.value\n  });\n  const handleSignup = async e => {\n    e.preventDefault();\n    try {\n      const res = await axios.post('http://localhost:5000/api/auth/signup', {\n        name,\n        email,\n        password\n      });\n      alert(res.data.message); // ✅ will now show \"Signup successful\"\n      setIsLogin(true); // redirect to login after success\n    } catch (err) {\n      var _err$response, _err$response$data;\n      alert(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Signup failed');\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const res = await axios.post('/api/auth/signup', form);\n      localStorage.setItem('token', res.data.token);\n      navigate('/');\n    } catch (err) {\n      alert(err.response.data.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"name\",\n        onChange: handleChange,\n        placeholder: \"Name\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"email\",\n        onChange: handleChange,\n        placeholder: \"Email\",\n        type: \"email\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"password\",\n        onChange: handleChange,\n        placeholder: \"Password\",\n        type: \"password\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(Signup, \"fJsnt2xbsvZdJXjMSdwRc7YrLBM=\", false, function () {\n  return [useNavigate];\n});\n_c = Signup;\nexport default Signup;\nvar _c;\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"names":["useState","axios","useNavigate","jsxDEV","_jsxDEV","Signup","_s","form","setForm","name","email","password","navigate","handleChange","e","target","value","handleSignup","preventDefault","res","post","alert","data","message","setIsLogin","err","_err$response","_err$response$data","response","handleSubmit","localStorage","setItem","token","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onChange","placeholder","required","type","_c","$RefreshReg$"],"sources":["C:/Users/param/Downloads/folder/college-portal/Frontend/src/pages/Signup.jsx"],"sourcesContent":["import { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction Signup() {\r\n  const [form, setForm] = useState({ name: '', email: '', password: '' });\r\n  const navigate = useNavigate();\r\n\r\n  const handleChange = e => setForm({ ...form, [e.target.name]: e.target.value });\r\n\r\n  const handleSignup = async (e) => {\r\n  e.preventDefault();\r\n  try {\r\n    const res = await axios.post('http://localhost:5000/api/auth/signup', {\r\n      name,\r\n      email,\r\n      password\r\n    });\r\n\r\n    alert(res.data.message); // ✅ will now show \"Signup successful\"\r\n    setIsLogin(true); // redirect to login after success\r\n  } catch (err) {\r\n    alert(err.response?.data?.message || 'Signup failed');\r\n  }\r\n};\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n    try {\r\n      const res = await axios.post('/api/auth/signup', form);\r\n      localStorage.setItem('token', res.data.token);\r\n      navigate('/');\r\n    } catch (err) {\r\n      alert(err.response.data.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"auth-form\">\r\n      <h2>Sign Up</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <input name=\"name\" onChange={handleChange} placeholder=\"Name\" required />\r\n        <input name=\"email\" onChange={handleChange} placeholder=\"Email\" type=\"email\" required />\r\n        <input name=\"password\" onChange={handleChange} placeholder=\"Password\" type=\"password\" required />\r\n        <button type=\"submit\">Sign Up</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Signup;\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EAChB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC;IAAES,IAAI,EAAE,EAAE;IAAEC,KAAK,EAAE,EAAE;IAAEC,QAAQ,EAAE;EAAG,CAAC,CAAC;EACvE,MAAMC,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAE9B,MAAMW,YAAY,GAAGC,CAAC,IAAIN,OAAO,CAAC;IAAE,GAAGD,IAAI;IAAE,CAACO,CAAC,CAACC,MAAM,CAACN,IAAI,GAAGK,CAAC,CAACC,MAAM,CAACC;EAAM,CAAC,CAAC;EAE/E,MAAMC,YAAY,GAAG,MAAOH,CAAC,IAAK;IAClCA,CAAC,CAACI,cAAc,CAAC,CAAC;IAClB,IAAI;MACF,MAAMC,GAAG,GAAG,MAAMlB,KAAK,CAACmB,IAAI,CAAC,uCAAuC,EAAE;QACpEX,IAAI;QACJC,KAAK;QACLC;MACF,CAAC,CAAC;MAEFU,KAAK,CAACF,GAAG,CAACG,IAAI,CAACC,OAAO,CAAC,CAAC,CAAC;MACzBC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC;IACpB,CAAC,CAAC,OAAOC,GAAG,EAAE;MAAA,IAAAC,aAAA,EAAAC,kBAAA;MACZN,KAAK,CAAC,EAAAK,aAAA,GAAAD,GAAG,CAACG,QAAQ,cAAAF,aAAA,wBAAAC,kBAAA,GAAZD,aAAA,CAAcJ,IAAI,cAAAK,kBAAA,uBAAlBA,kBAAA,CAAoBJ,OAAO,KAAI,eAAe,CAAC;IACvD;EACF,CAAC;EAEC,MAAMM,YAAY,GAAG,MAAMf,CAAC,IAAI;IAC9BA,CAAC,CAACI,cAAc,CAAC,CAAC;IAClB,IAAI;MACF,MAAMC,GAAG,GAAG,MAAMlB,KAAK,CAACmB,IAAI,CAAC,kBAAkB,EAAEb,IAAI,CAAC;MACtDuB,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEZ,GAAG,CAACG,IAAI,CAACU,KAAK,CAAC;MAC7CpB,QAAQ,CAAC,GAAG,CAAC;IACf,CAAC,CAAC,OAAOa,GAAG,EAAE;MACZJ,KAAK,CAACI,GAAG,CAACG,QAAQ,CAACN,IAAI,CAACC,OAAO,CAAC;IAClC;EACF,CAAC;EAED,oBACEnB,OAAA;IAAK6B,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxB9B,OAAA;MAAA8B,QAAA,EAAI;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChBlC,OAAA;MAAMmC,QAAQ,EAAEV,YAAa;MAAAK,QAAA,gBAC3B9B,OAAA;QAAOK,IAAI,EAAC,MAAM;QAAC+B,QAAQ,EAAE3B,YAAa;QAAC4B,WAAW,EAAC,MAAM;QAACC,QAAQ;MAAA;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACzElC,OAAA;QAAOK,IAAI,EAAC,OAAO;QAAC+B,QAAQ,EAAE3B,YAAa;QAAC4B,WAAW,EAAC,OAAO;QAACE,IAAI,EAAC,OAAO;QAACD,QAAQ;MAAA;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACxFlC,OAAA;QAAOK,IAAI,EAAC,UAAU;QAAC+B,QAAQ,EAAE3B,YAAa;QAAC4B,WAAW,EAAC,UAAU;QAACE,IAAI,EAAC,UAAU;QAACD,QAAQ;MAAA;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACjGlC,OAAA;QAAQuC,IAAI,EAAC,QAAQ;QAAAT,QAAA,EAAC;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAAChC,EAAA,CA5CQD,MAAM;EAAA,QAEIH,WAAW;AAAA;AAAA0C,EAAA,GAFrBvC,MAAM;AA8Cf,eAAeA,MAAM;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}